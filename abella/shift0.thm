% vim: et
Specification "shift0".

Define is_lbl : lbl -> prop by
  is_lbl z;
  is_lbl (s L) := is_lbl L.

Define is_kvar : kont -> prop by
  nabla k, is_kvar k.

Define is_val : val -> prop,
       is_expr : expr -> prop by
  nabla x, is_val x;
  is_val (lam E) := nabla x, is_expr (E x);

  is_expr (app V U) := is_val V /\ is_val U;
  is_expr (let E1 E2) := is_expr E1 /\ nabla x, is_expr (E2 x);
  is_expr (delim L E) := is_lbl L /\ is_expr E;
  is_expr (shift0 L E) := is_lbl L /\ nabla k, is_expr (E k);
  is_expr (plug K E) := is_kvar K /\ is_expr E;
  is_expr (ret V) := is_val V.


Define par : expr -> expr -> prop,
       parv : val -> val -> prop,
       pard : lbl -> expr -> expr -> prop by

  nabla x, parv x x;
  parv (lam E) (lam E') := nabla x, par (E x) (E' x);

  par (app V U) (app V' U') := parv V V' /\ parv U U';
  par (let E1 E2) (let E1' E2') := par E1 E1' /\ nabla x, par (E2 x) (E2' x);
  par (delim L E) (delim L E') := is_lbl L /\ pard L E E';
  par (shift0 L E) (shift0 L E') := is_lbl L /\ nabla k, par (E k) (E' k);
  par (plug K E) (plug K E') := is_kvar K /\ par E E';
  par (ret V) (ret V') := parv V V';

  par (app (lam E) V) (E' V') := parv V V' /\ nabla x, par (E x) (E' x);
  par (let (ret V) E) (E' V') := parv V V' /\ nabla x, par (E x) (E' x);
  par (delim L (ret V)) (ret V') := is_lbl L /\ parv V V';
  par (let (shift0 L E1) E2) (shift0 L E') :=
    is_lbl L /\ nabla k, par (E1 (kons (klet E2) k)) (E' k);
  par (delim L (shift0 L E)) E' :=
    is_lbl L /\ par (E (kons (kdelim L) kempty)) E';
  par (delim L (shift0 L' E)) (shift0 L' E') :=
    is_lbl L /\ is_lbl L' /\ (L = L' -> false) /\ nabla k, par (E (kons (kdelim L) k)) (E' k);
  par (plug (kons (kdelim L) K) E) E' := is_lbl L /\ par (plug K (delim L E)) E';
  par (plug (kons (klet E2) K) E1) E' := par (plug K (let E1 E2)) E';
  par (plug kempty E) E' := par E E';

  pard L E E' := par E E';
  pard L (let E1 E2) (let E1' E2') :=
    is_lbl L /\ par E1 E1' /\ nabla x, pard L (E2 x) (E2' x);
  pard L (shift0 L E) (shift0 L k\ E') :=
    is_lbl L /\ par (E (kons (kdelim L) kempty)) E';
  pard L (shift0 L' E) (shift0 L k_\ shift0 L' E') :=
    is_lbl L /\ is_lbl L' /\ (L = L' -> false) /\ nabla k, par (E (kons (kdelim L) k)) (E' k).

Theorem lbl_gnd : forall L, nabla (x : val), is_lbl (L x) -> exists (L' : lbl), L = (y\ L').
  induction on 1. intros. case H1. search. apply IH to H2. search.

Theorem pars_subv :
  (forall E E' U U', nabla x, par (E x) (E' x) -> parv U U' -> par (E U) (E' U')) /\
  (forall V V' U U', nabla x, parv (V x) (V' x) -> parv U U' -> parv (V U) (V' U')) /\
  (forall L E E' U U', nabla x, pard L (E x) (E' x) -> parv U U' -> pard L (E U) (E' U')).
  induction on 1 1 1. split.
  intros. case H1.
    apply IH1 to H3 H2. apply IH1 to H4 H2. search.
    apply IH to H3 H2. apply IH to H4 H2. search.
    apply lbl_gnd to H3. apply IH2 to H4 H2. search.
    apply lbl_gnd to H3. apply IH to H4 H2. search.
    case H3. apply IH to H4 H2. search.
    apply IH1 to H3 H2. search.
    apply IH to H4 H2. apply IH1 to H3 H2. search.
    apply IH to H4 H2. apply IH1 to H3 H2. search.
    apply lbl_gnd to H3. apply IH1 to H4 H2. search.
    apply lbl_gnd to H3. apply IH to H4 H2. search.
    apply lbl_gnd to H3. apply IH to H4 H2. search.
    apply lbl_gnd to H3. apply lbl_gnd to H4. apply IH to H6 H2. search.
    apply lbl_gnd to H3. apply IH to H4 H2. search.
    apply IH to H3 H2. search.
    apply IH to H3 H2. search.
  intros. case H1.
    search.
    search.
    apply IH to H3 H2. search.
  intros. case H1.
    apply IH to H3 H2. search.
    apply IH to H4 H2. apply IH2 to H5 H2. search.
    apply IH to H4 H2. search.
    apply lbl_gnd to H4. apply IH to H6 H2. search.

Split pars_subv as par_subv, parv_subv, pard_subv.

Define park : kont -> kont -> prop,
       parkf : kontf -> kontf -> prop by
  nabla k, park k k ;
  park kempty kempty;
  park (kons F K) (kons F' K') := parkf F F' /\ park K K';
  parkf (klet E) (klet E') := nabla x, par (E x) (E' x);
  parkf (kdelim L) (kdelim L).

Theorem pars_subk :
  (forall E E' K K' M, nabla k, par (E k) (E' k) -> park (K k) (K' k) -> par (E (K k)) (M k) -> exists M', par (M k) M' /\ par (E' (K' k)) M') /\
  (forall V V' K K' M, nabla k, parv (V k) (V' k) -> park K K' -> parv (V K) M -> exists M', parv M M' /\ parv (V' K') M') /\
  (forall L E E' K K' M, nabla k, pard L (E k) (E' k) -> park K K' -> pard L (E K) M -> exists M', pard L M M' /\ pard L (E' K') M').
  skip.

Split pars_subk as par_subk, parv_subk, pard_subk.

Theorem pars_sublet :
  (forall L E E' T T' M, nabla k x, par (E k) (E' k) -> pard L (T x) (T' x) -> par (E (kons (klet T) k)) (M k)
   -> exists M', par (M k) M' /\ par (E' (kons (klet T') k)) M') /\
  (forall L V V' T T' M, nabla k x, parv (V k) (V' k) -> pard L (T x) (T' x) -> parv (V (kons (klet T) k)) M
   -> exists M', parv M M' /\ parv (V' (kons (klet T') k)) M') /\
  (forall L E E' T T' M, nabla k x, pard L (E k) (E' k) -> pard L (T x) (T' x) -> pard L (E (kons (klet T) k)) M
   -> exists M', pard L M M' /\ pard L (E' (kons (klet T') k)) M').
  skip.

Split pars_sublet as par_sublet, parv_sublet, pard_sublet.

Theorem pars_diam :
  (forall E E1 E2, par E E1 -> par E E2 -> exists E3, par E1 E3 /\ par E2 E3) /\
  (forall V V1 V2, parv V V1 -> parv V V2 -> exists V3, parv V1 V3 /\ parv V2 V3) /\
  (forall L E E1 E2, pard L E E1 -> pard L E E2 -> exists E3, pard L E1 E3 /\ pard L E2 E3) /\
  (forall L E E1 E2, par E E1 -> pard L E E2 -> exists E3, pard L E1 E3 /\ par E2 E3) /\
  (forall L E E1 E2, pard L E E1 -> par E E2 -> exists E3, par E1 E3 /\ pard L E2 E3).
  induction on 1 1 1 1 1. split.
  intros. case H1.
    case H2. apply IH1 to H3 H5. apply IH1 to H4 H6. search.
             case H3. apply IH1 to H4 H5. apply IH to H7 H6. apply par_subv to H10 H8. apply par_subv to H11 H9. search.
    case H2. apply IH to H3 H5. apply IH to H4 H6. search.
             case H3. apply IH to H4 H6. apply IH1 to H7 H5. apply par_subv to H8 H10. apply par_subv to H9 H11. search.
             case H3. assert (park (kons (klet E4) n1) (kons (klet E2') n1)). apply par_subk to H8 H9 H6. search.
    case H2. apply IH2 to H4 H6. search.
             case H4. case H7. apply IH1 to H8 H6. search.
             case H4. case H7. apply par_subk to H9 _ H6. search.
                      apply IH to H8 H6. search.
                      apply H9 to _.
             case H4. case H9. apply par_subk to H11 _ H8. search.
                      apply H7 to _.
                      apply IH to H12 H8. search.
    case H2. apply IH to H4 H6. search.
    case H2. apply IH to H4 H6. search.
             case H3.
             case H3.
             case H3.
    case H2. apply IH1 to H3 H4. search.
    case H2. apply IH1 to H3 H6. case H5. apply IH to H4 H9. apply par_subv to H10 H7. apply par_subv to H11 H8. search.
             apply IH1 to H3 H5. apply IH to H4 H6. apply par_subv to H9 H7. apply par_subv to H10 H8. search.
    case H2. apply IH to H4 H6. case H5. apply IH1 to H3 H9. apply par_subv to H7 H10. apply par_subv to H8 H11. search.
             apply IH1 to H3 H5. apply IH to H4 H6. apply par_subv to H9 H7. apply par_subv to H10 H8. search.
    case H2. case H6. case H7. apply IH1 to H4 H8. search.
             apply IH1 to H4 H6. search.
    case H2. case H5. apply par_subk to H8 _ H4. search.
             apply IH to H4 H6. search.
    case H2. case H6. case H7. apply par_subk to H9 _ H4. search.
                               apply IH to H4 H8. search.
                               apply H9 to _.
             apply IH to H4 H6. search.
             apply H7 to _.
    case H2. case H8. case H9. apply par_subk to H11 _ H6. search.
                               apply H5 to _.
                               apply IH to H6 H12. search.
             apply H5 to _.
             apply IH to H6 H10. search.
    case H2. case H5.
             apply IH to H4 H6. search.
    case H2. case H4.
             apply IH to H3 H4. search.
    case H2. case H4.
             apply IH to H3 H4. search.
  intros. case H1.
    case H2. search.
    case H2. apply IH to H3 H4. search.
  intros. case H1.
    apply IH3 to H3 H2. search.
    case H2. case H6. apply IH to H4 H7. apply IH4 to H5 H8. search.
                      case H4. apply IH1 to H9 H7. apply IH4 to H5 H8. apply par_subv to H12 H10. apply pard_subv to H13 H11. search.
                      case H4. apply par_sublet to H10 _ H8. search.
             apply IH to H4 H7. apply IH2 to H5 H8. search.
    case H2. case H5. apply par_subk to H7 _ H4. search.
                      apply IH to H4 H6. search.
                      apply H7 to _.
    case H2. case H7. apply par_subk to H9 _ H6. search.
                      apply H5 to _.
                      apply IH to H6 H10. search.
  intros. case H1.
    case H2. case H5. apply IH1 to H3 H6. apply IH1 to H4 H7. search.
             case H3. apply IH1 to H4 H6. apply IH to H8 H7. apply par_subv to H11 H9. apply par_subv to H12 H10. search.
    case H2. case H5. apply IH to H3 H6. apply IH to H4 H7. search.
                      case H3. apply IH1 to H8 H6. apply IH to H4 H7. apply par_subv to H11 H9. apply par_subv to H12 H10. search.
                      case H3. apply par_subk to H9 _ H7. search.
             apply IH to H3 H6. apply IH3 to H4 H7. search.
    case H2. case H5. apply IH2 to H4 H7. search.
                      case H4. case H8. apply IH1 to H9 H7. search.
                      case H4. case H8. apply par_subk to H10 _ H7. search.
                               apply IH to H9 H7. search.
                               apply H10 to _.
                      case H4. case H10. apply par_subk to H12 _ H9. search.
                               apply H8 to _.
                               apply IH to H13 H9. search.
    case H2. case H5. apply IH to H4 H7. search.
             case H5. apply par_subk to H4 _ H6. search.
                      apply par_subk to H4 _ H6. search.
             apply par_subk to H4 _ H8. search.
    case H2. case H5. apply IH to H4 H7. search.
                      case H3.
                      case H3.
                      case H3.
    case H2. case H4. apply IH1 to H3 H5. search.
    case H2. case H5. apply IH1 to H3 H7. case H6. apply IH to H4 H10. apply par_subv to H11 H8. apply par_subv to H12 H9. search.
                      apply IH1 to H3 H6. apply IH to H4 H7. apply par_subv to H10 H8. apply par_subv to H11 H9. search.
    case H2. case H5. case H6. apply IH1 to H3 H8. apply IH to H4 H7. apply par_subv to H11 H9. apply par_subv to H12 H10. search.
                               apply IH1 to H3 H6. apply IH to H4 H7. apply par_subv to H10 H8. apply par_subv to H11 H9. search.
             case H6. apply IH1 to H3 H8. apply IH3 to H4 H7. apply pard_subv to H11 H9. apply par_subv to H12 H10. search.
    case H2. case H5. case H7. case H8. apply IH1 to H4 H9. search.
                      apply IH1 to H4 H7. search.
    case H2. case H5. case H6. apply par_subk to H9 _ H4. search.
                      apply IH to H4 H7. search.
             case H6. apply par_sublet to H9 _ H4. search.
    case H2. case H5. case H7. case H8. apply par_subk to H10 _ H4. search.
                                        apply IH to H4 H9. search.
                                        apply H10 to _.
                      apply IH to H4 H7. search.
                      apply H8 to _.
    case H2. case H7. case H9. case H10. apply par_subk to H12 _ H6. search.
                               apply H5 to _.
                               apply IH to H6 H13. search.
                      apply H5 to _.
                      apply IH to H6 H11. search.
    case H2. case H5. case H6.
                      apply IH to H4 H7. search.
    case H2. case H4. case H5.
                      apply IH to H3 H5. search.
    case H2. case H4. case H5.
                      apply IH to H3 H5. search.
  intros. case H1.
    apply IH to H3 H2. search.
    case H2. apply IH to H4 H6. apply IH4 to H5 H7. search.
             case H4. apply IH1 to H8 H6. apply IH4 to H5 H7. apply par_subv to H11 H9. apply pard_subv to H12 H10. search.
             case H4. apply par_sublet to H9 _ H7. search.
    case H2. apply par_subk to H6 _ H4. search.
    case H2. apply par_subk to H8 _ H6. search.
